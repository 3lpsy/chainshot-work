require("./index.scss");
var _elliptic = require("elliptic");
var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
var _ellipticDefault = _parcelHelpers.interopDefault(_elliptic);
var _cryptoJs = require("crypto-js");
const ec = new _ellipticDefault.default.ec('secp256k1');
const server = "http://localhost:3042";
function sign(privKey, msg) {
  let key = ec.keyFromPrivate(privKey);
  let msgHash = _cryptoJs.SHA256(msg);
  let signature = key.sign(msgHash.toString());
  let result = {
    message: msg,
    r: signature.r.toString(16),
    s: signature.s.toString(16)
  };
  return result;
}
function pubToAddr(publicKey) {
  const lastIndex = publicKey.length - 1;
  const startingIndex = lastIndex - 40;
  return publicKey.slice(startingIndex);
}
function handlePrivKey() {
  let privKey = document.getElementById("private-key").value;
  privKey = privKey.trim();
  if (privKey.length == 64) {
    let key = ec.keyFromPrivate(privKey);
    let pub = key.getPublic().encode('hex');
    let addr = pubToAddr(pub);
    document.getElementById("exchange-address").value = addr;
    document.getElementById("exchange-publickey").value = pub;
    updateAddr(addr);
    document.getElementById("signature").innerHTML = "";
  } else {
    document.getElementById("signature").innerHTML = "Invalid PrivKey length";
  }
}
handlePrivKey();
document.getElementById("private-key").addEventListener('input', () => {
  handlePrivKey();
});
function updateAddr(value) {
  if (value === "") {
    document.getElementById("balance").innerHTML = 0;
    return;
  }
  fetch(`${server}/balance/${value}`).then(response => {
    return response.json();
  }).then(({balance}) => {
    document.getElementById("balance").innerHTML = balance;
  });
}
document.getElementById("exchange-address").addEventListener('input', ({target: {value}}) => {
  updateAddr(value);
});
function handleTransferRequest() {
  const sender = document.getElementById("exchange-address").value;
  const signer = document.getElementById("exchange-publickey").value;
  const amount = document.getElementById("send-amount").value;
  const recipient = document.getElementById("recipient").value;
  if (!sender || !signer || !amount || !recipient) {
    document.getElementById("send-error").innerHTML = "Errors: Missing either sender, signer (publicKey), amount, or recipient";
    return;
  }
  let privKey = document.getElementById("private-key").value;
  privKey = privKey.trim();
  if (privKey.length == 64) {
    const msg = JSON.stringify({
      sender,
      amount,
      recipient,
      signer
    });
    let sig = sign(privKey, msg);
    let body = JSON.stringify({
      transaction: sig
    });
    const request = new Request(`${server}/send`, {
      method: 'POST',
      body
    });
    fetch(request, {
      headers: {
        'Content-Type': 'application/json'
      }
    }).then(response => {
      return response.json();
    }).then(({balance}) => {
      document.getElementById("balance").innerHTML = balance;
    });
  } else {
    document.getElementById("signature").innerHTML = "Invalid PrivKey length";
    document.getElementById("encoded-signature").value = "";
  }
}
document.getElementById("transfer-amount").addEventListener('click', () => {
  handleTransferRequest();
});
